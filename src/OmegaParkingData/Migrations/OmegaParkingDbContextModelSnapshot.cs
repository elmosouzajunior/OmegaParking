// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OmegaParkingData.Context;

namespace OmegaParkingData.Migrations
{
    [DbContext(typeof(OmegaParkingDbContext))]
    partial class OmegaParkingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OmegaParkingBusiness.Models.Estacionamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int>("TotalVagasAutomoveis")
                        .HasColumnType("int");

                    b.Property<int>("TotalVagasMotocicletas")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Estacionamentos");
                });

            modelBuilder.Entity("OmegaParkingBusiness.Models.Registro", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EstacionamentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("RegistroEntrada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RegistroSaida")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ValorCobrado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("VeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VeiculoId");

                    b.ToTable("Registros");
                });

            modelBuilder.Entity("OmegaParkingBusiness.Models.Veiculo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Observacao")
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.Property<int>("TipoVeiculo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Veiculos");
                });

            modelBuilder.Entity("OmegaParkingBusiness.Models.Registro", b =>
                {
                    b.HasOne("OmegaParkingBusiness.Models.Estacionamento", "Estacionamento")
                        .WithMany("Registros")
                        .HasForeignKey("Id")
                        .IsRequired();

                    b.HasOne("OmegaParkingBusiness.Models.Veiculo", "Veiculo")
                        .WithMany()
                        .HasForeignKey("VeiculoId");

                    b.Navigation("Estacionamento");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("OmegaParkingBusiness.Models.Estacionamento", b =>
                {
                    b.Navigation("Registros");
                });
#pragma warning restore 612, 618
        }
    }
}
